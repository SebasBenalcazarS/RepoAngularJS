<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/batch 
	http://www.springframework.org/schema/batch/spring-batch.xsd" default-lazy-init="true">
	
	
<!--**********************************************************************************************************************-->
<!--				 						REPOSITORY	Y JOBLAUCHER						  -->
<!--**********************************************************************************************************************-->
	<bean id="sicJobRepositoryArticuloALcances"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" >
		<property name="transactionManager"><ref bean="kHibernateTransactionManager"></ref></property>
        <property name="isolationLevelForCreate" value="ISOLATION_DEFAULT"/>
		<property name="validateTransactionState" value="false"/>
	</bean>
	
	
	<bean id="sicJobLauncherArticuloALcances"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="sicJobRepositoryArticuloALcances"/>
	</bean>

	<!-- repository y joblauncher, generacion de archivos -->
	
		<bean id="sicAlcanceBatchUtilGestor" class="ec.com.smx.sic.articulo.gestor.batch.AlcanceBatchUtilGestor">
			<property name="jobLauncher"><ref bean="sicJobLauncher"/></property>
		</bean>
		
		<bean id="sicJobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
			<property name="jobRepository" ref="sicJobRepository"/>
		</bean>
		
		<bean id="sicJobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
			<property name="transactionManager" ref="fwkMockTransactionManager"/>
			<property name="validateTransactionState" value="false"/>
		</bean>

	<!-- ***************************************************** -->
	
	<!--**********************************************************************************************************************-->
	<!-- 						JOBS ARTICULOS	ALCANCE						  -->
	<!--**********************************************************************************************************************-->

	<batch:job id="sicComunicarSICJob" job-repository="sicJobRepositoryArticuloALcances">				
			<batch:step id="comunicarSICStepA">
				<batch:tasklet   throttle-limit="10">
					<batch:chunk commit-interval="300" reader="sicComunicarArticuloAlcanceReader" writer="sicComunicarArticuloAlcanceWriter" retry-limit="3">
						 <batch:retryable-exception-classes>
				            <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/>
				         </batch:retryable-exception-classes>
					</batch:chunk>
				</batch:tasklet>
			</batch:step>
	</batch:job>	
	
	<batch:job id="sicAsignacionMasivaJob" job-repository="sicJobRepositoryArticuloALcances">		
			<batch:step id="asignacionMasivaStepC" >
				<batch:tasklet   throttle-limit="10">
					<batch:chunk commit-interval="1" reader="sicArticuloAlcanceReader" writer="sicArticuloAlcanceWriter" retry-limit="3">
						 <batch:retryable-exception-classes>
				            <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/>
				         </batch:retryable-exception-classes>
					</batch:chunk>
				</batch:tasklet>
			</batch:step>
	</batch:job>
	
	<batch:job id="sicActualizarPrototipoComunicarSICJob" job-repository="sicJobRepositoryArticuloALcances">				
<!-- 			<batch:step id="actualizarPrototipoStepA" next="comunicarSICStepB"> -->
			<batch:step id="actualizarPrototipoStepA">
				<batch:tasklet   throttle-limit="10">
					<batch:chunk reader="sicVistaArticuloLocalesReader" writer="sicVistaArticuloLocalesWriter" commit-interval="1" retry-limit="3">
						 <batch:retryable-exception-classes>
				            <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/>
				         </batch:retryable-exception-classes>
					</batch:chunk>
				</batch:tasklet>
			</batch:step>
<!-- 			<batch:step id="comunicarSICStepB"> -->
<!-- 				<batch:tasklet   throttle-limit="10"> -->
<!-- 					<batch:chunk commit-interval="100" reader="sicComunicarArticuloAlcanceReader" writer="sicComunicarArticuloAlcanceWriter" retry-limit="3"> -->
<!-- 						 <batch:retryable-exception-classes> -->
<!-- 				            <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/> -->
<!-- 				         </batch:retryable-exception-classes> -->
<!-- 					</batch:chunk> -->
<!-- 				</batch:tasklet> -->
<!-- 			</batch:step> -->
	</batch:job>	
	
	<batch:job id="sicAsignacionMasivaComunicarSICJob" job-repository="sicJobRepositoryArticuloALcances">		
<!-- 			<batch:step id="asignacionMasivaStepA" next="comunicarSICStepC"> -->
			<batch:step id="asignacionMasivaStepA">
				<batch:tasklet   throttle-limit="10">
					<batch:chunk commit-interval="1" reader="sicArticuloAlcanceReader" writer="sicArticuloAlcanceWriter" retry-limit="3">
						<batch:retryable-exception-classes>
				            <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/>
				         </batch:retryable-exception-classes>
					</batch:chunk>
				</batch:tasklet>
			</batch:step>
<!-- 			<batch:step id="comunicarSICStepC"> -->
<!-- 				<batch:tasklet   throttle-limit="10"> -->
<!-- 					<batch:chunk commit-interval="100" reader="sicComunicarArticuloAlcanceReader" writer="sicComunicarArticuloAlcanceWriter" retry-limit="3"> -->
<!-- 						 <batch:retryable-exception-classes> -->
<!-- 				            <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/> -->
<!-- 				         </batch:retryable-exception-classes> -->
<!-- 					</batch:chunk> -->
<!-- 				</batch:tasklet> -->
<!-- 			</batch:step> -->
	</batch:job>
		
	
	<batch:job id="sicAsignacionMasivaActualizarPrototipoJob" job-repository="sicJobRepositoryArticuloALcances">		
			<batch:step id="asignacionMasivaStepB" >
				<batch:tasklet   throttle-limit="10">
					<batch:chunk commit-interval="1" reader="sicArticuloAlcanceReader" writer="sicArticuloAlcanceWriter" retry-limit="3">
						 <batch:retryable-exception-classes>
				            <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/>
				         </batch:retryable-exception-classes>
					</batch:chunk>
				</batch:tasklet>
			</batch:step>
<!-- 			<batch:step id="actualizarPrototipoStepB" next="comunicarSICStepD"> -->
<!-- 			<batch:step id="actualizarPrototipoStepB"> -->
<!-- 				<batch:tasklet   throttle-limit="10"> -->
<!-- 					<batch:chunk reader="sicVistaArticuloLocalesReader" writer="sicVistaArticuloLocalesWriter" commit-interval="100" retry-limit="3"> -->
<!-- 						 <batch:retryable-exception-classes> -->
<!-- 				            <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/> -->
<!-- 				         </batch:retryable-exception-classes> -->
<!-- 					</batch:chunk> -->
<!-- 				</batch:tasklet> -->
<!-- 			</batch:step>		 -->
<!-- 			<batch:step id="comunicarSICStepD" > -->
<!-- 				<batch:tasklet   throttle-limit="10"> -->
<!-- 					<batch:chunk commit-interval="100" reader="sicComunicarArticuloAlcanceReader" writer="sicComunicarArticuloAlcanceWriter" retry-limit="3"> -->
<!-- 						 <batch:retryable-exception-classes> -->
<!-- 				            <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/> -->
<!-- 				         </batch:retryable-exception-classes> -->
<!-- 					</batch:chunk> -->
<!-- 				</batch:tasklet> -->
<!-- 			</batch:step> -->
	</batch:job>
	
	<batch:job id="sicReporteAlcancesJob" job-repository="sicJobRepositoryArticuloALcances">		
		<batch:step id="reporteAlcancesStep" >
			<batch:tasklet   throttle-limit="10">
				<batch:chunk commit-interval="100" reader="sicReporteAlcancesReader" writer="sicReporteAlcancesWriter" retry-limit="3">
					 <batch:retryable-exception-classes>
			            <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/>
			         </batch:retryable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	
	<batch:job id="sicAlcancesGenerarArchivoErrorTxtJob" job-repository="sicJobRepository">		
		<batch:step id="generarReporteErrorTxtAlcance" >
			<batch:tasklet  transaction-manager="fwkMockTransactionManager">
				<batch:chunk reader="sicAlcancesReporteReader" writer="sicAlcancesReporteWriter" commit-interval="1" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
<!--**********************************************************************************************************************-->
<!-- 						AFECTAR ARTICULO-LOCAL MEDIANTE PLANTILLA DE BUSQUEDA DE ARTICULOS							  -->
<!--**********************************************************************************************************************-->
	<bean id="sicArticuloAlcanceReader" class="ec.com.smx.sic.articulo.gestor.batch.reader.AsignacionAlcancesItemReader" scope="step">
		<property name="hibernateH"><ref bean="hibernateH"/></property>		
		<property name="sessionFactory"> <ref bean="sessionFactory" /></property>
		<property name="saveState" value="true" />
		<property name="fetchSize" value="300"/>
		<property name="useStatelessSession" value="true"/>
		<property name="encodedBaseDTO" value="#{jobParameters['plantillaAsignacionMasiva']}"/>
	</bean>
	<bean id="sicArticuloAlcanceWriter" class="ec.com.smx.sic.articulo.gestor.batch.writer.ArticuloAlcanceItemWriter" scope="step">
		<property name="articuloVOString" value="#{jobParameters['plantillaParams']}"/>
	</bean>
	
<!--**********************************************************************************************************************-->
<!-- 								COMUNICAR ARTICULO-LOCAL AFECTADOS AL SIC 											  -->
<!--**********************************************************************************************************************-->
	
	<bean id="sicComunicarArticuloAlcanceReader" class="ec.com.smx.generadorexportacion.spring.batch.item.reader.TemplateCursorItemReader" scope="step">
		<property name="hibernateH"><ref bean="hibernateH"/></property>
		<property name="sessionFactory"> <ref bean="sessionFactory" /></property>
		<property name="saveState" value="true" />
		<property name="fetchSize" value="300"/>
		<property name="useStatelessSession" value="true"/>
		<property name="encodedBaseDTO" value="#{jobParameters['plantillaComunicarSic']}"/>
	</bean>
	<bean id="sicComunicarArticuloAlcanceWriter" class="ec.com.smx.sic.articulo.gestor.batch.writer.ComunicarArticuloAlcanceItemWriter" scope="step" >
		<property name="articuloAlcanceGestor"><ref bean="sicArticuloAlcanceGestor"/></property>
		<property name="articuloVOString" value="#{jobParameters['plantillaParams']}"/>
	</bean>
	
<!--**********************************************************************************************************************-->
<!-- 								VISTA DE ARTICULO LOCALES											  -->
<!--**********************************************************************************************************************-->	
	
	<bean id="sicVistaArticuloLocalesReader" class="ec.com.smx.generadorexportacion.spring.batch.item.reader.DinamicViewCursorItemReader" scope="step">
		<property name="sessionFactory"> <ref bean="sessionFactory" /></property>
		<property name="saveState" value="true" />
		<property name="fetchSize" value="50"/>
		<property name="useStatelessSession" value="true"/>
		<property name="queryString" value="#{jobParameters['consultaHQL']}"/>
		<property name="viewAlias" value="#{jobParameters['viewAlias']}"/>
		<property name="encodedBaseDTO" value="#{jobParameters['baseDTO']}"/>
		<property name="parameterValues">
			<map>
				<entry key="pFechaAplicacion" value="#{jobParameters['pFechaAplicacion']}"/>
			</map>
		</property>
	</bean>
	
	<bean id="sicVistaArticuloLocalesWriter" class="ec.com.smx.sic.articulo.gestor.batch.writer.VistaArticuloLocalesItemWriter" scope="step">
		<property name="articuloVOString" value="#{jobParameters['plantillaParams']}"/>
		<property name="articuloAlcanceDAO"><ref bean="sicArticuloAlcanceDAO"/></property>
		<property name="dataGestor"><ref bean="dataGestor"/></property>
	</bean>
	
	<!--**********************************************************************************************************************-->
	<!-- 								REPORTE DE ALCANCES																	  -->
	<!--**********************************************************************************************************************-->
	<bean id="sicReporteAlcancesReader" class="ec.com.smx.generadorexportacion.spring.batch.item.reader.TemplateCursorItemReader" scope="step">
		<property name="hibernateH"><ref bean="hibernateH"/></property>
		<property name="sessionFactory"> <ref bean="sessionFactory" /></property>
		<property name="saveState" value="true" />
		<property name="fetchSize" value="50"/>
		<property name="useStatelessSession" value="true"/>
		<property name="encodedBaseDTO" value="#{jobParameters['plantillaReporte']}"/>
	</bean>
	<bean id="sicReporteAlcancesWriter" class="ec.com.smx.sic.articulo.gestor.batch.writer.ReporteAlcanceItemWriter" scope="step">
		<property name="articuloAlcanceGestor"><ref bean="sicArticuloAlcanceGestor"/></property>
	</bean>
	
	<!--**********************************************************************************************************************-->
	<!-- 								PAGINADOR																	  -->
	<!--**********************************************************************************************************************-->
	<batch:job id="sicArticuloPaginadoJob" job-repository="sicJobRepositoryArticuloALcances">		
		<batch:step id="articuloPaginaStepA">
			<batch:tasklet   throttle-limit="10">
				<batch:chunk commit-interval="#{jobParameters['pageSize']}" reader="sicArticuloAlcancePaginadoReader" writer="sicComunicarArticuloAlcanceWriter" retry-limit="3">
					<batch:retryable-exception-classes>
			            <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/>
			         </batch:retryable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<bean id="sicArticuloAlcancePaginadoReader" class="ec.com.smx.generadorexportacion.spring.batch.item.reader.TemplatePagingItemReader" scope="step">
		<property name="hibernateH"><ref bean="hibernateH"/></property>
		<property name="sessionFactory"> <ref bean="sessionFactory" /></property>
<!-- 		<property name="queryString" value="from ec.com.smx.sic.cliente.mdl.dto.ArticuloDTO" /> -->
		<property name="saveState" value="true" />
		<property name="useStatelessSession" value="true"/>
		<property name="pageSize" value="#{jobParameters['pageSize']}"/>
		<property name="pagesNumber" value="#{jobParameters['pagesNumber']}"/>
		<property name="encodedBaseDTO" value="#{jobParameters['plantillaReporte']}"/>
	</bean>
	
	
	<batch:job id="sicEdicionMasivaArticulosJob" job-repository="sicJobRepositoryArticuloALcances">		
		<batch:step id="asignacionMasiva1">
			<batch:tasklet throttle-limit="10">
				<batch:chunk commit-interval="1" reader="sicArticuloEdicionReader" writer="sicArticuloEdicionWriter" retry-limit="3">
					<batch:retryable-exception-classes>
			            <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/>
			         </batch:retryable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<bean id="sicArticuloEdicionReader" class="ec.com.smx.generadorexportacion.spring.batch.item.reader.DinamicViewCursorItemReader" scope="step">
		<property name="sessionFactory"> <ref bean="sessionFactory" /></property>
		<property name="saveState" value="true" />
		<property name="fetchSize" value="100"/>
		<property name="useStatelessSession" value="true"/>
		<property name="viewAlias" value="#{jobParameters['viewAlias']}"/>
		<property name="queryString" value="#{jobParameters['consultaHQL']}"/>
		<property name="encodedBaseDTO" value="#{jobParameters['baseDTO']}"/>
	</bean>
	
	<bean id="sicArticuloEdicionWriter" class="ec.com.smx.sic.articulo.gestor.batch.writer.ArticuloEdicionInternaWriter" scope="step">
		<property name="plantillaRegistroString" value="#{jobParameters['plantillaRegistro']}"/>
		<property name="usuarioModificacion" value="#{jobParameters['usuarioModificacion']}" />
		<property name="totalArticulosString" value="#{jobParameters['totalArticulos']}" />
		<property name="fechaModificacion" value="#{jobParameters['fechaModificacion']}" />
		<property name="codigoCompania" value="#{jobParameters['codigoCompania']}" />
	</bean>
	
	<!-- ******************************************** -->
	<!-- REPORTE DE ERROR GENERADO AL ASIGNAR ALCANCE -->
	<!-- ******************************************** -->	
	<bean id="sicAlcancesReporteReader" class="ec.com.smx.sic.articulo.gestor.batch.reader.AlcanceArticuloItemReader" scope="step">
		<property name="entidad"><ref bean="sicAlcanceBatchUtilGestor"></ref></property>
	</bean>	
	
	<bean id="sicAlcancesReporteWriter" class="ec.com.smx.sic.articulo.gestor.batch.writer.ArticuloAlcanceErrorItemWriter" scope="step">	   
	    <property name="resource" value="file:#{jobParameters['rutaDepositarArchivoT']}" />
		<property name="lineAggregator">            
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
            	<property name="delimiter" value="|" />
            	<property name="fieldExtractor">
            		<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
            			<property name="names" value="#{jobParameters['columnasT']}" />
            		</bean>
            	</property>
            </bean>        		
		</property>
	</bean>
	
</beans>