<?xml version="1.0" encoding="UTF-8"?>

<ruleset name="kruger-pmd-rules" xmlns="http://pmd.sf.net/ruleset/1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
	xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
	<description>
		Reglas basicas para la compilacion del proyecto
	</description>

	<!-- BASIC -->
	<rule ref="rulesets/java/basic.xml">
		<exclude name="EmptyCatchBlock" />
	</rule>
	
	<!--<rule ref="rulesets/java/basic.xml/EmptyIfStmt">-->
	<rule ref="rulesets/java/empty.xml/EmptyIfStmt">
		<priority>1</priority>
	</rule>

	<!--<rule ref="rulesets/java/basic.xml/EmptyCatchBlock" message="Avoid empty catch blocks">-->
	<rule ref="rulesets/java/empty.xml/EmptyCatchBlock" message="Avoid empty catch blocks">
		<priority>3</priority>
		<properties>
			<property name="allowCommentedBlocks"
				description="Los bloques vacios que contengan comentarios seran ignorados">
				<value>true</value>
			</property>
		</properties>
	</rule>

	<!-- BRACES* - El formateo de codigo deberia prevenir estos errores. -->
	<rule ref="rulesets/java/braces.xml" />

	<!-- CODE SIZE** -->
	<rule ref="rulesets/java/codesize.xml">
		<exclude name="TooManyMethods" /> <!-- Excluida pues aun tiene problemas -->
	</rule>

	<!-- COUPLING** 
	<rule ref="rulesets/java/coupling.xml">
		<exclude name="LawOfDemeter" />
	</rule>
	-->
	<rule ref="rulesets/java/finalizers.xml"/>
	
	<rule ref="rulesets/java/logging-java.xml">
		<priority>1</priority>
		<exclude name="GuardLogStatementJavaUtil" />
		<exclude name="MoreThanOneLogger" />
	</rule>
	
	<!-- DESIGN -->
	<rule ref="rulesets/java/design.xml">
		<exclude name="SimpleDateFormatNeedsLocale" />
		<exclude name="UseLocaleWithCaseConversions" />
		<exclude name="SingularField" />
		<exclude name="UncommentedEmptyConstructor" />
		<exclude name="GodClass" />
	</rule>

	<!-- IMPORTS* - La organizacion de imports de eclipse deberia prevenir estos 
		errores. -->
	<rule ref="rulesets/java/imports.xml/TooManyStaticImports">
		<properties>
			<property name="maximumStaticImports" value="5" />
		</properties>
	</rule>
	
	<rule ref="rulesets/java/imports.xml/UnusedImports"  message="El siguiente import se encuentra pero no es usado: {0}">
		<priority>1</priority>
	</rule>

	<!-- J2EE -->
	<rule ref="rulesets/java/j2ee.xml" />

	<!-- JAVABEANS* -->
	<rule ref="rulesets/java/javabeans.xml" >
		<exclude name="BeanMembersShouldSerialize" />
	</rule>

	<!-- LOGGING-JAVA -->
	<!-- Se excluye la regla para la validacion de impresion de los LOGS -->
	<rule ref="rulesets/java/logging-java.xml" >
		<exclude name="GuardLogStatementJavaUtil" />
	</rule>
	
	<rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace" message="No se permite el uso del print stack trace use los logs">
		<priority>1</priority>
	</rule>

	<!-- NAMING -->
	<rule ref="rulesets/java/naming.xml">
		<exclude name="ShortVariable" />
		<exclude name="LongVariable" />
		<exclude name="AbstractNaming" />
	</rule>

	<!-- OPTIMIZATIONS** -->
	<rule ref="rulesets/java/optimizations.xml">
		<exclude name="LocalVariableCouldBeFinal" />
		<exclude name="MethodArgumentCouldBeFinal" />
		<exclude name="AvoidInstantiatingObjectsInLoops" />
	</rule>

	<!-- STRICT EXCEPTIONS** -->
	<rule ref="rulesets/java/strictexception.xml" />

	<!-- STRINGS** -->
	<rule ref="rulesets/java/strings.xml" />

	<!-- UNUSED CODE* -->
	<rule ref="rulesets/java/unusedcode.xml" />

	<!-- Ejemplo de regla propia -->
	<!-- Prohibir el uso de nombres completos de tipos en las declaraciones. -->
	<!--<rule name="ProhibirFQCN" message="No se permite el uso de nombre de 
		clases totalmente calificados" class="net.sourceforge.pmd.lang.rule.XPathRule" 
		language="java"> <description>No se permite el uso de nombres de clase calificadas, 
		osea, que se definan incluyendo el paquete al que pertenecen.</description> 
		<properties> <property name="xpath"> <value> <![CDATA[ //ClassOrInterfaceType[matches(@Image,'(com|org|net|ec|eu|sun|java|javax)(\.\w+)+')] 
		| //PrimaryPrefix/Name[matches(@Image,'(com|org|net|ec|eu|sun|java|javax)(\.\w+)+')] 
		]]> </value> </property> </properties> <priority>3</priority> <example> <![CDATA[ 
		// Uso erroneo public class A { org.var.B b = new org.var.C(); public org.var.D 
		d(org.var.E e) { org.var.F f = new org.var.G(); org.var.H.h(org.var.I.i, 
		m.j); } } // Uso correcto: import org.var.B; import org.var.C; import org.var.D; 
		import org.var.E; import org.var.F; import org.var.G; import org.var.H; import 
		org.var.I; public class A { B b = new C(); public D d(E e) { F f = new G(); 
		H.h(I.i, m.j); } } ]]> </example> </rule> -->
</ruleset>
